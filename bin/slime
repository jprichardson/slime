#!/usr/bin/env node

var fs = require('fs')
var path = require('path')
var repl = require('repl')
var util = require('util')
var chalk = require('chalk')

// default to 'dev'
var NODE_ENV = process.env.NODE_ENV || 'dev'

// package.json
var PKG_FILE = path.join(process.cwd(), 'package.json')
if (fs.existsSync(PKG_FILE))
  var PKG = require(PKG_FILE)

// slimefile.js
var SLIME_FILE = path.join(process.cwd(), 'slimefile.js')
if (fs.existsSync(SLIME_FILE)) 
  var SLIME = require(SLIME_FILE)

// init REPL
var PROJ_NAME = PKG ? PKG.name : '[no project]'
var r = repl.start({
  prompt: util.format('%s (%s)> ', PROJ_NAME, NODE_ENV),
  ignoreUndefined: true
}).on('exit', function() {
  console.log('exiting...')
  process.exit()
})

// default contexts
r.context._ = require('lodash')

// init requires
if (!PKG || !PKG.dependencies) return
Object.keys(PKG.dependencies).forEach(function(dep) {
  // check if in slimefile.js
  if (SLIME && dep in SLIME.context) {
    // ignore if it's 'false'
    if (SLIME.context[dep] === false)
      return
    // rename the dep, useful for classes
    if (typeof SLIME.context[dep] == 'string')
      return r.context[SLIME.context[dep]] = require(dep)
  }

  r.context[dep] = require(dep)
})
